宏观上：
1.技术广度方面
至少要精通多门开源技术吧，研究过struts\spring等的源码。

2.项目经验方面
从头到尾跟过几个大项目，头是指需求阶段，包括需求调研。
尾是指上线交付之后，包括维护阶段。

3.架构经验方面
有过分布式系统的架构和开发经验。对于跨系统的结构优化，数据存储的性能指标等有丰富经验。什么缓存啊、数据库的垂直切分什么的，业务的抽象和水平拆分啊，这些应该都轻车熟路吧。

4.行业领域方面
最起码得精通一到两门业务吧，所谓精通，就是比如做金融证券业务的，至少等当半个经融分析师。做电力业务的，至少等当半个电力工程师。

5.个人修为
有自己一些独到的见解，不会人云亦云啦。

微观上：
1.精通面向对象分析与设计(OOA/OOD)、涉及模式(GOF，J2EEDP)以及综合模式。十分了解UML，尤其是class，object，interaction以及statediagrams。

2.学习JAVA语言的基础知识以及它的核心类库(collections，serialization，streams，networking， multithreading，reflection，event，handling，
NIO，localization，以及其他)。

3.了解JVM，classloaders，classreflect，以及垃圾回收的基本工作机制等。有能力反编译一个类文件并且明白一些基本的汇编指令。

4.如果要写客户端程序，需要学习WEB的小应用程序(applet)，必需掌握GUI设计的思想和方法，以及桌面程序的SWING，AWT， SWT。
应该对UI部件的JAVABEAN组件模式有所了解。JAVABEANS也被应用在JSP中以把业务逻辑从表现层中分离出来。

5.学习java数据库技术，如JDBCAPI并且会使用至少一种persistence/ORM构架，例如Hibernate，JDO， CocoBase，TopLink，
InsideLiberator(国产JDO红工厂软件)或者iBatis。

6.了解对象关系的阻抗失配的含义，以及它是如何影响业务对象的与关系型数据库的交互，和它的运行结果，还需要掌握不同的数据库产品运用，
比如:oracle，mysql，mssqlserver。

7.学习JAVA的沙盒安全模式(classloaders，bytecodeverification，managers，policyandpermissions，codesigning， digitalsignatures，
cryptography，certification，Kerberos，以及其他)还有不同的安全/认证 API，例如JAAS(JavaAuthenticationandAuthorizationService)，
JCE (JavaCryptographyExtension)，JSSE(JavaSecureSocketExtension)，以及JGSS (JavaGeneralSecurityService)。

8.学习Servlets，JSP，以及JSTL(StandardTagLibraries)和可以选择的第三方TagLibraries。

9.熟悉主流的网页框架，例如JSF，Struts，Tapestry，Cocoon，WebWork，以及他们下面的涉及模式，如MVC/MODEL2。

10.学习如何使用及管理WEB服务器，例如tomcat，resin，Jrun，并且知道如何在其基础上扩展和维护WEB程序。

11.学习分布式对象以及远程API，例如RMI和RMI/IIOP。

12.掌握各种流行中间件技术标准和与java结合实现，比如Tuxedo、CROBA，当然也包括javaEE本身。

13.学习最少一种的XMLAPI，例如JAXP(JavaAPIforXMLProcessing)，JDOM(JavaforXMLDocumentObjectModel)，DOM4J，或JAXR(JavaAPIforXMLRegistries)。

14.学习如何利用JAVAAPI和工具来构建WebService。例如JAX-RPC(JavaAPIforXML/RPC)，SAAJ (SOAPwithAttachmentsAPIforJava)，
JAXB(JavaArchitectureforXMLBinding)，JAXM(JavaAPIforXMLMessaging)， JAXR(JavaAPIforXMLRegistries)，
或者JWSDP(JavaWebServicesDeveloperPack)。

15.学习一门轻量级应用程序框架，例如Spring，PicoContainer，Avalon，以及它们的IoC/DI风格(setter，constructor，interfaceinjection)。

16.熟悉不同的J2EE技术，例如JNDI(JavaNamingandDirectoryInterface)，JMS (JavaMessageService)，JTA/JTS(JavaTransactionAPI/JavaTransactionService)，JMX (JavaManagementeXtensions)，以及JavaMail。

17.学习企业级JavaBeans(EJB)以及它们的不同组件模式：Stateless/StatefulSessionBeans，
EntityBeans(包含Bean- ManagedPersistence[BMP]或者Container-ManagedPersistence[CMP]和它的EJB-QL)，或者 Message-DrivenBeans(MDB)。

18.学习如何管理与配置一个J2EE应用程序服务器，如WebLogic，JBoss等，并且利用它的附加服务，例如簇类，连接池以及分布式处理支援。
还需要了解如何在它上面封装和配置应用程序并且能够监控、调整它的性能。

19.熟悉面向方面的程序设计以及面向属性的程序设计(这两个都被很容易混淆的缩写为AOP)，以及他们的主流JAVA规格和执行。例如AspectJ和AspectWerkz。

20.熟悉对不同有用的API和frame work等来为你服务。例如Log4J(logging/tracing)，Quartz (scheduling)，JGroups(networkgroupcommunication)，
JCache(distributedcaching)， Lucene(full-textsearch)，JakartaCommons等等。

21.如果将要对接或者正和旧的系统或者本地平台，需要学习JNI (JavaNativeInterface) and JCA (JavaConnectorArchitecture)。

22.熟悉JINI技术以及与它相关的分布式系统，比如掌握CROBA。

23.学习JavaCommunityProcess(JCP)以及他的不同JavaSpecificationRequests(JSRs)，例如Portlets(168)，JOLAP(69)，DataMiningAPI(73)，等等。

24.熟练掌握一种JAVAIDE例如sunOne，netBeans，IntelliJIDEA或者Eclipse。(有些人更喜欢VI或EMACS来编写文件。随便你用什么了：)

25.JAVA(精确的说是有些配置)是冗长的，它需要很多的人工代码(例如EJB)，所以需要熟悉代码生成工具，例如XDoclet。

26.熟悉一种单元测试体系(JNunit)，并且学习不同的生成、部署工具(Ant，Maven)。

27.熟悉一些在JAVA开发中经常用到的软件工程过程。例如RUP(RationalUnifiedProcess)andAgilemethodologies。

28.能够深入了解加熟练操作和配置不同的操作系统，比如GNU/linux，sunsolaris，macOS等，做为跨平台软件的开发者。

29.需要紧跟java发展的步伐，比如现在可以深入的学习javaME，以及各种java新规范，技术的运用，如新起的web富客户端技术。

30.必需要对opensource有所了解，因为至少java的很多技术直接是靠开源来驱动发展的，如java3D技术。
